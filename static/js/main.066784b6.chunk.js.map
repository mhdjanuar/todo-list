{"version":3,"sources":["redux/action.js","utils/index.js","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["createTodo","data","dispatch","type","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","useStyles","makeStyles","theme","root","padding","breakpoints","down","container","textAlign","border","borderRadius","list","width","marginTop","listItem","backgroundColor","marginBottom","button","selectColor","marginLeft","title","fontWeight","color","CssTextField","withStyles","borderBottomColor","borderColor","TextField","App","classes","useDispatch","todo","useSelector","state","todos","useState","textTodo","setTextTodo","fontColor","setFontColor","hover","setHover","className","Typography","variant","style","display","justifyContent","alignItems","value","onKeyDown","e","keyCode","_id","status","onKeyPress","onChange","target","id","label","size","required","IconButton","onClick","onSend","fontSize","Select","labelId","defaultValue","val","MenuItem","List","map","item","index","Fade","in","timeout","ListItem","onMouseOver","onMouseOut","todoById","foundIndex","findIndex","todoObj","newTodoObj","firstArray","slice","lastArray","ListItemIcon","ListItemText","primary","textDecoration","ListItemSecondaryAction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","actionTypes","initialState","todoReducer","action","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","storePersisted","persistStore","ReactDOM","render","StrictMode","loading","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.066784b6.chunk.js","sourcesContent":["export const createTodo = data => dispatch => {\r\n    dispatch({ type: 'CREATE_TODO', data })\r\n}\r\n\r\nexport const updatedTodo = (todos, todoById) => dispatch => {\r\n    const {_id} = todoById;\r\n    const foundIndex = todos.findIndex(item => item._id === _id);\r\n    const todoObj = todos[foundIndex];\r\n    const newTodoObj = { ...todoObj, status: !todoObj.status };\r\n\r\n    const firstArray = todos.slice(0, foundIndex);\r\n    const lastArray = todos.slice(foundIndex + 1);\r\n    const newTodos = [...firstArray, newTodoObj, ...lastArray];\r\n\r\n    dispatch({ type: 'UPDATED_TODO', data: newTodos })\r\n}\r\n\r\nexport const deleteTodo = (todos, todoById) => dispatch => {\r\n    const {_id} = todoById;\r\n    const foundIndex = todos.findIndex(item => item._id === _id);\r\n\r\n    const firstArray = todos.slice(0, foundIndex);\r\n    const lastArray = todos.slice(foundIndex + 1);\r\n    const newTodos = [...firstArray, ...lastArray];\r\n\r\n    dispatch({ type: 'DELETE_TODO', data: newTodos })\r\n}","export const makeid = (length) => {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n}","import React,{useState} from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { \n  TextField, \n  List, \n  ListItem, \n  ListItemText, \n  ListItemIcon, \n  ListItemSecondaryAction,\n  Fade,\n  IconButton,\n  Select,\n  MenuItem,\n  Typography\n} from '@material-ui/core';\nimport CheckBoxOutlineBlank from '@material-ui/icons/CheckBoxOutlineBlank';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport AddBoxIcon from '@material-ui/icons/AddCircle';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createTodo, updatedTodo, deleteTodo } from './redux/action';\nimport { makeid } from './utils/index';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '10vh',\n    [theme.breakpoints.down('xs')]: {\n      padding: '8px',\n    }\n  },\n  container: {\n    textAlign: 'center',\n    padding: '8px',\n    border: '1px solid #ff6f00',\n    borderRadius: '10px',\n    // [theme.breakpoints.down('xs')]: {\n    //   padding: '16px',\n    // }\n  },\n  list: {\n    width: '500px',\n    marginTop: '10px',\n    [theme.breakpoints.down('xs')]: {\n      width: '100%',\n    }\n  },\n  listItem: {\n    backgroundColor: '#ff6f00',\n    marginBottom: '10px',\n    borderRadius: '5px',\n  },\n  button: {\n   '&:hover': {\n    backgroundColor: '#ffa040',\n   } \n  },\n  selectColor: {\n    marginLeft: '30px',\n  },\n  title: {\n    fontWeight: 'bold',\n    padding: '16px',\n    color: '#ff6f00'\n  },\n}));\n\nconst CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: '#ff6f00',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: '#ff6f00',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: '#ff6f00',\n      },\n      '&:hover fieldset': {\n        borderColor: '#ff6f00',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: '#ff6f00',\n      },\n    },\n  },\n })(TextField);\n\nconst App = () => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch()\n  const todo = useSelector(state => state.todos);\n\n  const [textTodo, setTextTodo] = useState('');\n  const [fontColor, setFontColor] = useState('#FFF');\n  const [hover, setHover] = useState('');\n\n  const onKeyPress = (e) => {\n    if(e.keyCode === 13){\n      if (textTodo !== '') {\n        const data = {\n          _id: makeid(5),\n          todo: textTodo,\n          status: false,\n        }\n  \n        dispatch(createTodo(data));\n        setTextTodo('')\n      }\n   }\n  }\n\n  const onSend = () => {\n    if (textTodo !== '') {\n      const data = {\n        _id: makeid(5),\n        todo: textTodo,\n        status: false,\n      }\n\n      dispatch(createTodo(data));\n      setTextTodo('')\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.container}>\n        <Typography variant={'h5'} className={classes.title}>What's your plan today?</Typography>\n\n        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n          <div style={{display: 'flex', alignItems: 'center'}}>\n            <CssTextField \n              value={textTodo} \n              onKeyDown={(e) => onKeyPress(e)} \n              onChange={(e) => setTextTodo(e.target.value)}\n              id=\"outlined-basic\" \n              label=\"New Todo\" \n              variant=\"outlined\"\n              size={'small'}\n              required={true}\n              color={'secondary'}\n            />\n            <IconButton onClick={() => onSend()}>\n              <AddBoxIcon style={{fontSize: '25px', color: '#ff6f00'}} />\n            </IconButton>\n          </div>\n\n          <Select\n            style={{marginLeft: '30px'}}\n            label=\"Age\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            defaultValue={'#FFF'}\n            value={fontColor}\n            onChange={(val) => setFontColor(val.target.value)}\n          >\n            <MenuItem value={'#FFF'}>White</MenuItem>\n            <MenuItem value={'red'}>Red</MenuItem>\n            <MenuItem value={'green'}>Green</MenuItem>\n            <MenuItem value={'blue'}>Blue</MenuItem>\n          </Select>\n        </div>\n        \n        <div style={{display: 'flex', justifyContent: 'center'}}>\n          <List className={classes.list}>\n            {todo.map((item, index) => (\n              <Fade key={index} in={true} timeout={500}>\n                <ListItem \n                  classes={{root: classes.listItem, button: classes.button}}\n                  style={{color: fontColor}}\n                  onMouseOver={() => setHover(item._id)} \n                  onMouseOut={() => setHover('')}\n                  onClick={() => dispatch(updatedTodo(todo, item))}\n                  button>\n                  <ListItemIcon>\n                    {item.status ? \n                      <CheckBoxIcon style={{color: fontColor}}/> : \n                      <CheckBoxOutlineBlank style={{color: fontColor}} />}\n                  </ListItemIcon>\n                  <ListItemText primary={\n                    <Typography type=\"body2\" \n                     style={{ color: fontColor, textDecoration: item.status ? 'line-through' : 'none' }}>\n                     {item.todo}\n                    </Typography>\n                  } />\n                  {item._id === hover && \n                    <ListItemSecondaryAction onClick={() => dispatch(deleteTodo(todo, item))}>\n                      <IconButton>\n                        <ClearIcon style={{fontSize: '15px'}} />\n                      </IconButton>\n                    </ListItemSecondaryAction>}\n                </ListItem>\n              </Fade>\n            ))}\n          </List>\n        </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const actionTypes = {\r\n    CREATE_TODO: 'CREATE_TODO',\r\n    UPDATED_TODO: 'UPDATED_TODO',\r\n    DELETE_TODO: 'DELETE_TODO',\r\n};\r\n\r\nconst initialState = {\r\n    todos: []\r\n};\r\n\r\nconst todoReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.CREATE_TODO:\r\n            return {...state, todos:[...state.todos, action.data]}\r\n        case actionTypes.UPDATED_TODO:\r\n            return {...state, todos: action.data} \r\n        case actionTypes.DELETE_TODO:\r\n            return {...state, todos: action.data}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default todoReducer;","import {createStore, applyMiddleware} from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'\r\nimport thunk from 'redux-thunk';\r\nimport todoReducer from './reducer';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n  }\r\n\r\nconst persistedReducer = persistReducer(persistConfig, todoReducer)\r\n\r\nexport const store = createStore(persistedReducer, applyMiddleware(thunk));\r\nexport const storePersisted = persistStore(store);\r\n\r\n// export const store = createStore(todoReducer, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport {store, storePersisted} from '../src/redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={storePersisted}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}